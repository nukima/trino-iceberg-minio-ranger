version: '3.7'
services:
  trino-coordinator:
    image: 'trinodb/trino:467'
    hostname: trino-coordinator
    ports:
      - '8080:8080'
    volumes:
      - ./etc:/etc/trino
    networks:
      - trino

  mariadb:
    image: mariadb:10.5.8
    hostname: mariadb
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: metastore_db
    volumes:
      - ./mariadb-data:/var/lib/mysql
    networks:
      - trino

  hive-metastore:
    hostname: hive-metastore
    image: 'bitsondatadev/hive-metastore:latest'
    ports:
      - '9083:9083'
    volumes:
      - ./conf/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    environment:
      METASTORE_DB_HOSTNAME: mariadb
    depends_on:
      - mariadb
    networks:
      - trino

  minio:
    hostname: minio
    image: 'minio/minio:latest'
    container_name: minio
    ports:
      - "9001:9001"
      - "9000:9000"
    command: [ "server", "/data", "--console-address", ":9001" ]
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    networks:
      - trino

  # To Create Minio bucket and upload iris parquet file.
  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 minio minio123) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/iris;
      /usr/bin/mc mb minio/iris;
      /usr/bin/mc policy set public minio/iris;
      /usr/bin/mc cp /data/iris.parq minio/iris/iris.parq;
      exit 0;
      "
    networks:
      - trino
    volumes:
      - ./data/iris.parq:/data/iris.parq

  # add ranger service
  postgresql:
    image: postgres:13
    container_name: psql01
    hostname: psql01
    environment:
      POSTGRES_PASSWORD: "postgres"
    ports:
      - 5432:5432
    networks:
      - trino
    volumes:
      - ranger-pg-data:/var/lib/postgresql/data

  ranger-admin:
    image: aakashnand/trino-ranger-demo:v4.0
    container_name: ranger-admin
    hostname: ranger-admin
    entrypoint: /root/ranger-admin/docker-entrypoint.sh
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 6G
        reservations:
          cpus: '1'
          memory: 5G
    ports:
      - 6080:6080
    networks:
      - trino
    volumes:
      - ./ranger-admin:/root/ranger-admin

volumes:
  minio-data:
    driver: local
  ranger-pg-data:

networks:
  trino:
    driver: bridge
